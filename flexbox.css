/*
 * Flexbox.css v0.99 (http://www.stickybits.nl)
 * Copyright StickyBits.
 * Licensed under MIT
 */

/* ==========================================================================
   Flexbox main container styles
   - Follows same main axis orientation as used in flexbox definitions.
   - Flex items in the flex-container will wrap around by default
   - Default horizontal and vertical align at start. That is the upper left
     corder by default or upper right if reverse class is used.
   - in case of wrapping and vertical space left, preserve alignment
   ========================================================================== */

.flex-container,
.flex-container-cols,
.flex-container-rows {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  
  /* Normal packing direction */
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  
  /* Flex items are allowed to wrap */
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  
  -webkit-box-pack: start;
  -moz-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  
  -webkit-box-align: start;
  -moz-box-align: start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  
  /* Wrap with vertical space left, align start */
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
}

.flex-container-rows {
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.flex-container-cols {
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

/* ==========================================================================
   Flexbox container modifiers. Modify how the container displays flex-items
   - Classes focus on horizontal and vertical alignment of flex-items inside
     the container.
   - Same classes for horizontal and vertical alignment can be used for row
     and column based flex-containers with the same end result.
   ========================================================================== */

/* Horizontal alignment for flex-items in row containers and vertical aligment
   for flex-items in column containers  */
.flex-container-rows.halign-start,
.flex-container-cols.valign-start {
  -webkit-box-pack: start;
  -moz-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.flex-container-rows.halign-end,
.flex-container-cols.valign-end {
  -webkit-box-pack: end;
  -moz-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}
 
.flex-container-rows.halign-center,
.flex-container-cols.valign-center {
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-container-rows.halign-spacebetween,
.flex-container-cols.valign-spacebetween {
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}
  
.flex-container-rows.halign-spacearound,
.flex-container-cols.valign-spacearound {
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

.flex-container-rows.halign-stretch > .flex-item {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

/* Horizontal alignment for flex-items in column containers. 
   Vertical alignment for flex-items in row containers. */
.flex-container-rows.valign-start,
.flex-container-cols.halign-start {
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
}

.flex-container-rows.valign-end,
.flex-container-cols.halign-end {
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end;
}

.flex-container-rows.valign-center,
.flex-container-cols.halign-center {
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
}

.flex-container-rows.valign-spacebetween,
.flex-container-cols.halign-spacebetween {
  -webkit-align-content: space-between;
  -ms-flex-line-pack: justify;
  align-content: space-between;
}

.flex-container-rows.valign-spacearound,
.flex-container-cols.halign-spacearound {
  -webkit-align-content: space-around;
  -ms-flex-line-pack: distribute;
  align-content: space-around;
}

.flex-container-rows.valign-stretch,
.flex-container-cols.halign-stretch {
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.flex-container-rows.valign-stretch > .flex-item {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.flex-container-cols.valign-stretch > .flex-item {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

/* No wrapping or reverse wrapping of items */
.nowrap {
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.wrap-reverse {
  -webkit-flex-wrap: wrap-reverse;
  -ms-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}

/* Reverse pack the flex-items in the container */
.reverse {
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
}

.flex-container-rows.reverse {
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.flex-container-cols.reverse {
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}


/* ==========================================================================
   Flexbox item.
   - Default flex item does not strech
   ========================================================================== */

.flex-item {
  position: relative;
  
  -webkit-box-ordinal-group: 1;
  -moz-box-ordinal-group: 1;
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
}

.stretch {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.hstretch {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.vstretch {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.flex-container-cols .flex-item.hstretch {
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.flex-container-cols .flex-item.vstretch {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
}

.flex-item.start {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.flex-item.end {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
}

.flex-item.center {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}